name: terraform-plan

on: pull_request

env:
  TF_VERSION: 0.12.20

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        workspace: [test]

    name: ${{ matrix.workspace }}
    runs-on: ubuntu-latest

    env:
      WORKSPACE: ${{ matrix.workspace }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@1.0.0

      - name: Terraform Format
        uses: rewindio/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: fmt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          #      - name: Terraform Init
          #        uses: rewindio/terraform-github-actions@master
          #        with:
          #          tf_actions_version: ${{ env.TF_VERSION }}
          #          tf_actions_subcommand: init
          #          args: -backend-config backend/backend.tfvars
          #        env:
          #          TF_WORKSPACE: ${{ env.WORKSPACE }}
          #          AWS_SHARED_CREDENTIALS_FILE: .aws/credentials
          #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #
          #      - name: Terraform Validate
          #        uses: rewindio/terraform-github-actions@master
          #        with:
          #          tf_actions_version: ${{ env.TF_VERSION }}
          #          tf_actions_subcommand: validate
          #        env:
          #          TF_WORKSPACE: ${{ env.WORKSPACE }}
          #          AWS_SHARED_CREDENTIALS_FILE: .aws/credentials
          #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #
          #      - name: Terraform Plan
          #        id: terraform-plan
          #        uses: rewindio/terraform-github-actions@master
          #        with:
          #          tf_actions_version: ${{ env.TF_VERSION }}
          #          tf_actions_subcommand: plan
          #          args: -var-file backend/backend.tfvars -var-file ${{ steps.tfvars.outputs.tfvars_file }}
          #        env:
          #          TF_WORKSPACE: ${{ env.WORKSPACE }}
          #          AWS_SHARED_CREDENTIALS_FILE: .aws/credentials
          #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #
          #      - name: Upload Plan Artifact
          #        uses: actions/upload-artifact@v1
          #        with:
          #          name: terraform-plan-${{ env.WORKSPACE }}
          #          path: ${{ steps.terraform-plan.outputs.tf_actions_plan_output_file }}
          #
          #      - name: Cleanup AWS Credentials
          #        run: |
          #          rm -rf .aws
